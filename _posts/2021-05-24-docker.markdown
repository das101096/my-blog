---
layout: post
title:  "컨테이너 기반 가상화 플랫폼 ‘도커(Doker)’의 이해"
date:   2021-05-24 21:03:36 +0530
categories:
---
---

T아카데미 - 컨테이너 기반 가상화 플랫폼 ‘도커(Doker)’의 이해

---

## [1강] 도커 개요 및 소개

#### - **도커의 등장**
1. 2013년 파이콘에서 등장
2. 파이썬으로 만들어짐
3. The future of Linux Container
4. 이미지를 다양한 환경에서 제공함 (ubuntu, centos, busybox)

#### - **컨테이너**
- 컨테이너는 가상머신인가?

  각각의 VM = 서로 다른 환경
  각각의 컨테이너 = 서로 다른 환

- 컨테이너는 VM 인가요?

  VM은 하드웨어 가상화
   * 소프트웨어로 구현된 하드웨어
   * 내 컴퓨터 위에 소프트웨어로 만들어진 하드웨어가 얹어지는 것, 그 위에 OS 설치하여 사용

  컨테이너는 하드웨어 가상화가 아님
   * OS에서 지원하는 기능 사용
   * 격리된 환경에서 실행되는 ★프로세스★

   <img data-action="zoom" src='{{ "/image/32.PNG" | relative_url }}' alt='absolute'>

- chroot
  * 루트 디렉토리를 변경
  * 도커 이전 도커와 비슷한 역할을 함
  * 도커 - 리눅스 커널을 이용하여 프로세스를 격리함
      lxc (리눅스 내장 기능), libcontainer (도커 자체 개발)

#### - **이미지**
- 특정 프로세스를 실행하기 위한 환경
  * 계층화된 파일 시스템
  * 이미지는 파일들의 집합
  * 프로세스가 실행된느 환경도 결국 파일들의 집합임

#### - **도커의 기본 아키텍처**

1. 리눅스

    <img data-action="zoom" src='{{ "/image/33.PNG" | relative_url }}' alt='absolute'>

    * 컨테이너를 네이티브 하게 지원함
    * 배포판에 따라 차이는 있지만 대부분 지원
    * 실제 도커 컨테이너 배포에는 리눅스 머신을 사용

2. Dockeer for macOS

    <img data-action="zoom" src='{{ "/image/34.PNG" | relative_url }}' alt='absolute'>

    * xhyve - macOS의 가상화 방식 ( 경량 가상 머신 )
    * 호스트 머신과 자연스럽게 결합
      - 네트워크 / 볼륨 등
      - 호스트 머신처럼 사용 가능

3. VM on macOS

    <img data-action="zoom" src='{{ "/image/35.PNG" | relative_url }}' alt='absolute'>

    * 일반적인 가상 머신
    * 네트워크 / 볼륨 설정이 까다로움
    * 클라이언트는 환경변수를 참조하여 서버에 접속

4. Local Client & Remote Docker Server

    <img data-action="zoom" src='{{ "/image/36.PNG" | relative_url }}' alt='absolute'>

#### - **부가설명**
1. Dockerfile
   - 깨끗한 환경으로부터 애플리케이션 실행 환경까지 최단경로
2. 이미지
    - 이미 작동되는 상태
    - 하나의 이미지, 항상 같은 환경
3. 도커 - 경량화된 포터블 앱

## [2강] 도커 컨테이너 만들기
